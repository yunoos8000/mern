{"version":3,"sources":["components/WishItem.js","components/WishList.js","components/Home.js","actions/myaction.js","components/About.js","components/Default.js","components/Navbar.js","App.js","serviceWorker.js","myreducer/reducer.js","index.js"],"names":["WishItem","this","props","wish","_id","removeWish","Fragment","className","onClick","Component","WishList","wishList","map","item","key","Home","state","text","wishes","fetchWishes","console","log","onSubmit","submitWishAction","name","id","type","value","onChange","e","changeText","target","removeWishAction","connect","myWishes","dispatch","input","payload","fetch","method","then","res","json","res2","preventDefault","data","URLSearchParams","FormData","pair","append","body","About","Default","Navbar","style","background","href","App","exact","path","component","Boolean","window","location","hostname","match","iState","reducer","action","wishlist","filter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","mystore","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.42b08a8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class WishItem extends Component {\n  render() {\n      \n      const {_id, wish} = this.props.wish;\n      const {removeWish} = this.props;\n    return (\n        <React.Fragment>\n      <li className=\"collection-item darkness blue-grey darken-1 white-text \"\n       \n      >{wish} <i onClick={()=>removeWish(_id)} className=\"secondary-content material-icons white-text \">delete</i></li>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WishItem from \"./WishItem\";\n\nexport default class WishList extends Component {\n  render() {\n      const {wishList, removeWish} = this.props\n      // console.log(this.props);\n      \n    return (\n      <div>\n        <ul className=\"collection with-header\">\n          <li className=\"collection-header teal lighten-0\">\n            <h4>Wish List</h4>\n          </li>\n          {/* <% var i =0; wish.forEach(function(item) { %> */}\n\n          {wishList.map(item=>(<WishItem key={item._id} wish={item} removeWish={removeWish}/>))}\n            {/* <%= item.wish %> */}\n            {/* <!-- <i class=\"material-icons dp48 secondary-content white-text\"\n            onclick='deleteItem(this)' >delete</i> --> */}\n          {/* </li> */}\n          {/* <%  i++; });  %> */}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WishList from \"./WishList\";\nimport { connect } from 'react-redux';\nimport { changeText, fetchWishAction, submitWishAction, removeWishAction } from '../actions/myaction'\n\nclass Home extends Component {\n  state = {\n    text: \"\",\n    wishes: [{ _id: 1, wish: \"Lodding\" }],\n  };\n\n  componentDidMount() {\n    // fetch(\"/gethome\",{method:'get'})\n    //   .then((res) => res.json())\n    //   .then((res2) => {\n    //     return this.setState({\n    //       wishes: res2,\n    //     });\n    //   });\n    \n    this.props.fetchWishes  ();\n  }\n    // changeText = (e) => {\n  //   this.setState({\n  //     text: e.target.value,\n  //   });\n  // };\n\n\n  // removeWish = (id) => {\n    \n  // };\n\n  render() {\n    console.log(this.props);\n     \n    return (\n      <div>\n        <h1>This is a Home Page</h1>\n        <form onSubmit={this.props.submitWishAction}>\n          <div className=\"row\">\n            <div className=\"col s3\"></div>\n            <div className=\"input-field col s6\">\n              <input\n                name=\"item\"\n                id=\"item\"\n                type=\"text\"\n                value={this.props.text}\n                onChange={(e)=>this.props.changeText(e.target.value)}\n              />\n              <label className=\"active\">Wish</label>\n            </div>\n            <div className=\"col s3\"></div>\n          </div>\n          <button\n            className=\"btn waves-effect waves-light\"\n            type=\"submit\"\n            name=\"action\"\n          >\n            Submit\n            <i className=\"material-icons right\">send</i>\n          </button>\n        </form>\n        <WishList wishList={this.props.wishes} removeWish={this.props.removeWishAction} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    text : state.text,\n    wishes : state.myWishes\n  \n})\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  changeText: (input)=>{dispatch(changeText(input))},\n  fetchWishes: ()=>{dispatch(fetchWishAction())},\n  submitWishAction: (e)=>{dispatch(submitWishAction(e))},\n  removeWishAction: (id)=>{dispatch(removeWishAction(id))}\n}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home) ;","export const changeText = (input) => {\n  \n    return {type:\"CHANGE_TEXT\", payload: input}\n    // this.setState({\n    //   text: e.target.value,\n    // });\n  };\n\n  export const fetchWishAction = () => {\n    return (dispatch)=>{\n      fetch(\"/gethome\",{method:'get'})\n      .then((res) => res.json())\n      .then((res2) => {\n        console.log(res2);\n        dispatch({type:\"GET_WISH\", payload: res2});\n      });\n    }\n  }\n  export const submitWishAction = (e) => {\n    return (dispatch)=>{\n      e.preventDefault();\n      // const url = \"http://localhost:3001/sent\";\n      var data = new URLSearchParams();\n      for (const pair of new FormData(e.target)) {\n        console.log(pair);\n        data.append(pair[0], pair[1]);\n      }\n  \n      fetch(\"/sent\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((res2) => {\n          console.log(res2);\n          dispatch({type:\"ADD_WISH\", payload: res2});\n          // this.setState({\n          //   text: \"\",\n          //   wishes: [...this.state.wishes, res2],\n          // });\n          // // document.location.reload();\n        });\n    }\n  }\n  export const removeWishAction = (id) => {\n    return (dispatch)=>{\n      console.log(\"Deleting \" + id);\n    fetch(\"/delete/\" + id, { method: \"delete\" })\n      .then((res) => res.json())\n      .then((res2) => {\n        //   console.log(res2);\n        dispatch({type:\"REMOVE_WISH\", payload: res2});\n        // const wishlist = this.state.wishes.filter(\n        //   (item) => item._id !== res2._id\n        // );\n        // return this.setState({\n        //   wishes: wishlist,\n        // });\n      });\n    }\n  }\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div>\n                <h1>This is About Components</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <div>\n                <h1>404 Error</h1>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav style={{background:'#6200ee'}}>\n        <div className=\"nav-wrapper\">\n          <a href=\"#!\" className=\"brand-logo\">\n            Logo\n          </a>\n          <ul className=\"right hide-on-med-and-down\">\n            <li>\n              <a href=\"/\">Home</a>\n            </li>\n            <li>\n              <a href=\"/about\">About</a>\n            </li>\n            {/* <!-- Dropdown Trigger --> */}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Default from \"./components/Default\";\nimport Navbar from \"./components/Navbar\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route  component={Default} />\n        </Switch>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const iState = {\n    text: \"\",\n    myWishes: [{ _id: 1, wish: \"Lodding\" }],\n}\n\nconst reducer = (state = iState , action)=>{\n    \n    switch(action.type){\n        case 'CHANGE_TEXT':return {\n            ...state,\n            text:action.payload\n        };\n        case 'GET_WISH':return {\n            ...state,\n            myWishes:action.payload\n        };\n        case 'ADD_WISH':return {\n            ...state,\n            myWishes:[...state.myWishes, action.payload]\n        };\n        case 'REMOVE_WISH':\n            const wishlist = state.myWishes.filter(\n                  (item) => item._id !== action.payload._id\n                );    \n        return {\n            ...state,\n            myWishes:wishlist\n        };\n\n        default:return state;\n    }\n    if(action.type === \"CHANGE_TEXT\"){\n       return {\n           ...state,\n           text:action.payload\n       }\n    }else if(action.type === \"GET_WISH\"){\n        console.log(\"Reducer : \");\n        console.log(action.payload);\n        return {\n            ...state,\n            myWishes:action.payload\n        }\n    }\n    \n    return state;\n}\n\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { Provider } from \"react-redux\";\nimport reducer from \"./myreducer/reducer\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst mystore = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render( \n  <React.StrictMode>\n    <Provider store={mystore}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}